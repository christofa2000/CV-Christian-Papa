"use client";

import type { Doc } from "@/types/knowledge";

interface SearchResult {
  id: string;
  text: string;
  score: number;
}

// Funci√≥n simple para extraer palabras clave
function extractKeywords(text: string): string[] {
  return text
    .toLowerCase()
    .replace(/[^\w\s]/g, " ")
    .split(/\s+/)
    .filter((word) => word.length > 2)
    .filter((word) => !isStopWord(word));
}

// Palabras comunes a ignorar
function isStopWord(word: string): boolean {
  const stopWords = new Set([
    "que",
    "con",
    "para",
    "por",
    "del",
    "las",
    "los",
    "una",
    "uno",
    "son",
    "the",
    "and",
    "for",
    "are",
    "but",
    "not",
    "you",
    "all",
    "can",
    "had",
    "her",
    "was",
    "one",
    "our",
    "out",
    "day",
    "get",
    "has",
    "him",
    "his",
    "how",
    "man",
    "new",
    "now",
    "old",
    "see",
    "two",
    "way",
    "who",
    "boy",
    "did",
    "its",
    "let",
    "put",
    "say",
    "she",
    "too",
    "use",
  ]);
  return stopWords.has(word);
}

// Calcular similitud simple basada en palabras clave
function calculateSimilarity(
  queryKeywords: string[],
  docKeywords: string[]
): number {
  if (queryKeywords.length === 0 || docKeywords.length === 0) return 0;

  const querySet = new Set(queryKeywords);
  const docSet = new Set(docKeywords);

  const intersection = new Set([...querySet].filter((x) => docSet.has(x)));
  const union = new Set([...querySet, ...docSet]);

  return intersection.size / union.size;
}

// Base de conocimiento hardcodeada
const knowledgeBase: Doc[] = [
  {
    id: "persona",
    text: "üë®‚Äçüíª Christian Oscar Papa es un Desarrollador Frontend y Mobile especializado en React, React Native y TypeScript. Impulsa la creaci√≥n de experiencias digitales escalables, fluidas y visualmente cuidadas, combinando la l√≥gica del c√≥digo con una visi√≥n art√≠stica del dise√±o. Modalidad de trabajo: 100% remota. Idiomas: espa√±ol e ingl√©s t√©cnico.",
  },
  {
    id: "stack",
    text: "‚öôÔ∏è Stack principal: React, Next.js, React Native, TypeScript, Vite, Zustand, Redux Toolkit, React Query, TailwindCSS, Material UI, ShadCN, Ant Design, Jest, Vitest, React Testing Library, Node.js, Prisma, Postgres, Supabase, Git y Vercel. En dise√±o usa Figma y Framer Motion, con foco en accesibilidad WCAG y performance.",
  },
  {
    id: "experiencia:santander",
    text: "üè¶ React Developer en Santander Tecnolog√≠a Argentina (jun. 2024 ‚Äì actualidad). Desarrolla interfaces seguras y accesibles con React, TypeScript y Redux. Cumple con regulaciones bancarias y est√°ndares de seguridad. Refactoriz√≥ componentes cr√≠ticos, mejor√≥ la performance y participa en code reviews con foco en calidad.",
  },
  {
    id: "experiencia:despegar",
    text: "‚úàÔ∏è React Developer en Despegar (jul. 2023 ‚Äì may. 2024). Implement√≥ nuevas funcionalidades en la plataforma de reservas de hoteles y vuelos. Us√≥ React, TypeScript y TailwindCSS para componentes reutilizables e integr√≥ APIs en tiempo real. Mejor√≥ el rendimiento (+15 puntos Lighthouse) y colabor√≥ con UX/UI y backend.",
  },
  {
    id: "experiencia:bewise",
    text: "üíª React Developer en Bewise (jun. 2022 ‚Äì jul. 2023). Desarroll√≥ apps internas bajo metodolog√≠a SCRUM. Stack: React, Vite, TailwindCSS. Mejor√≥ accesibilidad y performance (Lighthouse +95). Particip√≥ en QA t√©cnico y releases.",
  },
  {
    id: "experiencia:circulo",
    text: "üõí Frontend Developer en C√≠rculo M√°gico (oct. 2021 ‚Äì jun. 2022). Desarroll√≥ el carrito de compras para e-commerce, priorizando rendimiento y experiencia de usuario. Implement√≥ Redux, consumo de APIs RESTful y optimizaci√≥n de endpoints.",
  },
  {
    id: "experiencia:freelance",
    text: "üöÄ Frontend & Mobile Developer Freelance (nov. 2020 ‚Äì sept. 2021). Cre√≥ proyectos con React, React Native, Next.js, Vue.js y TypeScript. Desarroll√≥ apps h√≠bridas con Expo y React Native Paper, optimizando interfaces para Android e iOS. Foco en usabilidad, rendimiento y consistencia visual.",
  },
  {
    id: "filosofia",
    text: "üí° Christian combina disciplina t√©cnica con creatividad art√≠stica. Encarar un proyecto es como escalar una monta√±a: requiere constancia, foco y adaptaci√≥n. Aplica metodolog√≠as √°giles, testing continuo y dise√±o centrado en el usuario. Cree en la mejora constante, en escribir c√≥digo limpio y en entregar resultados reales que impacten.",
  },
  {
    id: "contacto",
    text: "üîó LinkedIn: https://www.linkedin.com/in/christian-oscar-papa ¬∑ GitHub: https://github.com/christofa2000 ¬∑ Email: christofa2000@gmail.com",
  },
];

// Funci√≥n de b√∫squeda simple
export function searchKnowledge(query: string, limit = 5): SearchResult[] {
  const queryKeywords = extractKeywords(query);

  const results = knowledgeBase
    .map((doc) => {
      const docKeywords = extractKeywords(doc.text);
      const score = calculateSimilarity(queryKeywords, docKeywords);
      return {
        id: doc.id,
        text: doc.text,
        score,
      };
    })
    .filter((result) => result.score > 0)
    .sort((a, b) => b.score - a.score)
    .slice(0, limit);

  return results;
}

// Funci√≥n para generar respuesta contextual
export function generateResponse(
  query: string,
  results: SearchResult[]
): string {
  if (results.length === 0) {
    return "No encontr√© informaci√≥n relevante sobre esa consulta. ¬øPodr√≠as reformular tu pregunta?";
  }

  const queryLower = query.toLowerCase();

  // Preguntas sobre stack tecnol√≥gico
  if (
    queryLower.includes("stack") ||
    queryLower.includes("tecnolog√≠a") ||
    queryLower.includes("tecnologias") ||
    queryLower.includes("herramientas")
  ) {
    const stackInfo = results.find((r) => r.id === "stack");
    if (stackInfo) {
      return `Mi stack tecnol√≥gico principal incluye: React, Next.js, React Native, TypeScript, Vite, Zustand, Redux Toolkit, React Query, TailwindCSS, Material UI, ShadCN, Ant Design, Jest, Vitest, React Testing Library, Node.js, Prisma, Postgres, Supabase, Git y Vercel. Tambi√©n uso Figma y Framer Motion para dise√±o, con foco en accesibilidad WCAG y performance.`;
    }
  }

  // Preguntas sobre experiencia
  if (
    queryLower.includes("experiencia") ||
    queryLower.includes("trabajo") ||
    queryLower.includes("empresa")
  ) {
    const expResults = results.filter((r) => r.id.startsWith("experiencia:"));
    if (expResults.length > 0) {
      const experiences = expResults.map((r) => r.text).join("\n\n");
      return `Mi experiencia profesional incluye:\n\n${experiences}`;
    }
  }

  // Preguntas personales
  if (
    queryLower.includes("qui√©n") ||
    queryLower.includes("quien") ||
    queryLower.includes("sobre")
  ) {
    const personalInfo = results.find((r) => r.id === "persona");
    if (personalInfo) {
      return personalInfo.text;
    }
  }

  // Preguntas sobre contacto
  if (
    queryLower.includes("contacto") ||
    queryLower.includes("email") ||
    queryLower.includes("linkedin")
  ) {
    const contactInfo = results.find((r) => r.id === "contacto");
    if (contactInfo) {
      return contactInfo.text;
    }
  }

  // Respuesta gen√©rica con contexto
  const contextText = results.map((r) => r.text).join("\n\n");
  return `Bas√°ndome en mi informaci√≥n:\n\n${contextText}`;
}



